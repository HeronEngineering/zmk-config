/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  ESC |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP   |
// | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '     |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  |SHFT|ENT|
//                    | GUI | LWR | SPC |   | SPC | RSE  | ALT |
                        bindings = <
   &kp ESC   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSPC
   &kp LCTRL &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
   &kp LSHFT &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &lt RSHFT ENT
                  &kp LGUI &mo 1 &kp SPACE   &kp SPACE &mo 2 &kp RALT
                        >;
                };
                lower_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | DEL  |
// | BTCLR|  _  |  +  |  {  |  }  |  |  |   | LFT | DWN |  UP | RGT |  `  |  ~   |
// | SHFT |  -  |  =  |  [  |  ]  |  \  |   | HOME| END | PGUP| PGDN| PSCR|      |
//                    |     |     | ENT |   | ENT |     |     |
                        bindings = <
   &kp TAB &kp EXCL  &kp AT    &kp HASH &kp DLLR &kp PRCNT      &kp CARET &kp AMPS &kp KP_MULTIPLY &kp LPAR  &kp RPAR  &kp DEL
   &trans  &kp UNDER &kp PLUS  &kp LBRC &kp RBRC &kp PIPE       &kp LEFT  &kp DOWN &kp UP          &kp RIGHT &kp GRAVE &kp TILDE
   &trans  &kp MINUS &kp EQUAL &kp LBKT &kp RBKT &kp BSLH       &kp HOME   &kp END &kp PGUP        &kp PGDN  &kp PSCR  &trans
                               &trans   &trans   &kp RET        &kp RET  &trans   &trans
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |      |  !  |  @  |  UP |  $  |   %  |   |  ^  |  7  |  8  |  9  |  0  | DEL  |
// |      |  (  | LFT | DWN | RGT |   )  |   |  &  |  4  |  5  |  6  |  -  |  +   |
// |      |  [  |  ]  |  #  |  {  |   }  |   |  *  |  1  |  2  |  3  |  .  |  =   |
//                    | GUI |  L3 | BKSP |   |BKSP |     | ALT |
                        bindings = <
   &trans &kp EXCL &kp AT   &kp UP   &kp DLLR  &kp PRCNT   &kp CARET       &kp N7 &kp N8 &kp N9 &kp N0    &kp DEL
   &trans &kp LPAR &kp LEFT &kp DOWN &kp RIGHT &kp RPAR    &kp AMPS        &kp N4 &kp N5 &kp N6 &kp MINUS &kp PLUS 
   &trans &kp LBKT &kp RBKT &kp HASH &kp LBRC  &kp RBRC    &kp KP_MULTIPLY &kp N1 &kp N2 &kp N3 &kp DOT   &kp EQUAL 
                                &trans  &mo 3  &kp BSPC    &kp BSPC  &trans  &trans
                        >;
                };
                l3_layer {
// Board Specific Layer
// -----------------------------------------------------------------------------------------
// |      |     |     |     |     |      |   |     |     |     |     |     |      |
// |      |     |     |     |     |      |   |     | BT4 | BT5 |     |     |      |
// |      |     |     |     |     |      |   |BTCLR| BT1 | BT2 | BT3 |     |      |
//                    |     |     |      |   |     |     |     |
                        bindings = <
   &trans &trans &trans &trans &trans &trans    &trans     &trans       &trans       &trans        &trans &trans
   &trans &trans &trans &trans &trans &trans    &trans     &bt BT_SEL 4 &bt BT_SEL 5 &trans        &trans &trans 
   &trans &trans &trans &trans &trans &trans    &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 2 &bt BT_SEL N3 &trans &trans 
                        &trans &trans &trans    &trans     &trans       &trans
                        >;
                };
        };
};


// | = &kp PIPE
// ~ = &kp TILDE
// = = &kp EQUAL
// \ = &kp BSLH
// ` = &kp GRAVE
// DEL  = &kp DEL
// BKSP = &kp BSPC
// _ = &kp UNDER
